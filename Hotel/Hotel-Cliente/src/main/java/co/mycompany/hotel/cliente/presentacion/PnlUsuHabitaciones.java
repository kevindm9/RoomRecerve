/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package co.mycompany.hotel.cliente.presentacion;

import co.mycompany.hotel.cliente.domain.services.HotelService;
import co.mycompany.hotel.commons.domain.Habitacion;
import co.mycompany.hotel.commons.domain.TipoHabitacion;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Ricardo
 */
public class PnlUsuHabitaciones extends javax.swing.JPanel {

    private FrmMain panel;
    private final HotelService service;
    private ArrayList<Habitacion> habitaciones;
    private final DefaultTableModel modelo;
    private final int id_hotel;
    Date fechaIni;
    Date fechaFin;
    String usuario;

    /**
     * Creates new form PnlVistaHabitaciones
     */
    public PnlUsuHabitaciones(FrmMain panel, int id_hotel, String usuario, Date fechaIni, Date fechaFin) {
        this.usuario = usuario;
        this.panel = panel;
        this.id_hotel = id_hotel;
        habitaciones = new ArrayList<>();
        this.service = new HotelService();
        this.fechaIni = fechaIni;
        this.fechaFin = fechaFin;
        initComponents();
        this.modelo = (DefaultTableModel) tabUsuHabitaciones.getModel();
        cargarHabitaciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabUsuHabitaciones = new javax.swing.JTable();
        btnUsuHabRegresar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        dccUsuHabInicio = new com.toedter.calendar.JDateChooser();
        dccUsuHabFin = new com.toedter.calendar.JDateChooser();
        btnUsuHabBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setOpaque(false);

        tabUsuHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Habitacion", "Carateristicas"
            }
        ));
        tabUsuHabitaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabUsuHabitacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabUsuHabitaciones);
        if (tabUsuHabitaciones.getColumnModel().getColumnCount() > 0) {
            tabUsuHabitaciones.getColumnModel().getColumn(0).setMinWidth(120);
            tabUsuHabitaciones.getColumnModel().getColumn(0).setPreferredWidth(120);
            tabUsuHabitaciones.getColumnModel().getColumn(0).setMaxWidth(120);
        }

        btnUsuHabRegresar.setText("Regresar");
        btnUsuHabRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuHabRegresarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Habitaciones por fecha"));
        jPanel1.setOpaque(false);

        btnUsuHabBuscar.setText("Buscar");
        btnUsuHabBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuHabBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dccUsuHabInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dccUsuHabFin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnUsuHabBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(dccUsuHabInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dccUsuHabFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUsuHabBuscar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnUsuHabRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUsuHabRegresar)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tabUsuHabitacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabUsuHabitacionesMouseClicked
        // TODO add your handling code here:

        int fila = tabUsuHabitaciones.getSelectedRow();
        int opc = JOptionPane.showConfirmDialog(null, "Reservar habitacion", "Desea reservar la habitacion?", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (opc == 0) {
            try {
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String formattedDate = simpleDateFormat.format(dccUsuHabInicio.getDate());
                //dccUsuHabInicio.getDateFormatString()
                fechaIni = Date.valueOf(formattedDate);
                formattedDate = simpleDateFormat.format(dccUsuHabFin.getDate());
                fechaFin = Date.valueOf(formattedDate);

                if (fechaFin.before(fechaIni) || fechaIni.before(new Date(System.currentTimeMillis()))) {
                    JOptionPane.showMessageDialog(null,
                            "Periodo de tiempo no valido", "Datos invalidos",
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Debe selecionar primero una fecha antes de reservar");
                return;
            }

            try {

                usuario = panel.getUsuario();
                if (service.getPersona(usuario).getId() != 0) {

                    int pago = JOptionPane.showConfirmDialog(null, "Presione YES para simular que el pago fue recibido en la plataforma", "Simulacion de PAGO", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (pago == 0) {

                        service.addReserva(id_hotel, habitaciones.get(fila), fechaIni, fechaFin, service.getPersona(usuario));
                        cargarHabitaciones();
                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Debe iniciar seccion para reservar la habitacion",
                            "Login",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error de conexion");
            }
        }

    }//GEN-LAST:event_tabUsuHabitacionesMouseClicked


    private void btnUsuHabRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuHabRegresarActionPerformed
        // TODO add your handling code here:
        panel.mostrarHoteles();
    }//GEN-LAST:event_btnUsuHabRegresarActionPerformed

    private void btnUsuHabBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuHabBuscarActionPerformed
        // TODO add your handling code here:
        //System.out.println(dccUsuHabInicio.getDateFormatString());
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = simpleDateFormat.format(dccUsuHabInicio.getDate());
        //dccUsuHabInicio.getDateFormatString()
        fechaIni = Date.valueOf(formattedDate);
        formattedDate = simpleDateFormat.format(dccUsuHabFin.getDate());
        fechaFin = Date.valueOf(formattedDate);

        if (fechaFin.before(fechaIni) || fechaIni.before(new Date(System.currentTimeMillis()))) {
            JOptionPane.showMessageDialog(null,
                    "Periodo de tiempo no valido", "Datos invalidos",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        cargarHabitaciones();

    }//GEN-LAST:event_btnUsuHabBuscarActionPerformed

    public void cargarHabitaciones() {

        if ((fechaIni.after(Date.valueOf("1900-01-01"))) && (fechaFin.after(Date.valueOf("1900-01-01")))) {
            dccUsuHabInicio.setDate(fechaIni);
            dccUsuHabFin.setDate(fechaFin);
        }

        for (int i = modelo.getRowCount() - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }

        habitaciones.clear();
        habitaciones = service.getHabitaciones(id_hotel, fechaIni, fechaFin);

        if (habitaciones.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "No se encontraron habitaciones", "Advertencia",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        tabUsuHabitaciones.setDefaultRenderer(Object.class, new Render());
        DefaultTableModel dt = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        dt.addColumn("Habitacion");
        dt.addColumn("Descripcion");

        if (habitaciones.size() > 0) {
            for (int i = 0; i < habitaciones.size(); i++) {
                Object fila[] = new Object[2];

                String descripcion = "<html>";
                descripcion += "<body><h3>" + habitaciones.get(i).getDescripcion() + "</h3>";
                descripcion += "--->Tipo:   " + habitaciones.get(i).getTipo().toString();
                descripcion += "<br>--->Precio: " + habitaciones.get(i).getPrecio();
                descripcion += "<br>--->Id:     " + habitaciones.get(i).getId();
                descripcion += "</body></html>";

                Image imagen = new ImageIcon(habitaciones.get(i).getFoto()).getImage();
                ImageIcon icono = new ImageIcon(imagen.getScaledInstance(120, 120, 0));

                //JOptionPane.showMessageDialog(null," Aprendiendo a poner imagenes ", "Imagen Java", JOptionPane.PLAIN_MESSAGE, icono);
                try {

                    fila[0] = new JLabel(icono);
                    fila[1] = new JLabel(descripcion);

                    modelo.addRow(fila);

                } catch (Exception ex) {
                    modelo.addRow(new Object[]{"No imagen", descripcion});
                }

                tabUsuHabitaciones.setModel(modelo);
                tabUsuHabitaciones.setRowHeight(120);

            }//*/
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUsuHabBuscar;
    private javax.swing.JButton btnUsuHabRegresar;
    private com.toedter.calendar.JDateChooser dccUsuHabFin;
    private com.toedter.calendar.JDateChooser dccUsuHabInicio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabUsuHabitaciones;
    // End of variables declaration//GEN-END:variables
}
